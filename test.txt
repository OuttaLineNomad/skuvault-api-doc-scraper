Developing For SkuVault
AddItem
Moderate
Add quantity to a warehouse location. 
inventory
package test

type addItem struct {
	Code         string ``
	LocationCode string ``
	Quantity     int64  ``
	Reason       string ``
	Sku          string ``
	TenantToken  string ``
	UserToken    string ``
	WarehouseID  int64  ``
}

package test

type addItem struct {
	AddItemStatus string ``
}

AddItemBulk
Moderate
Add quantity to warehouse locations, 100 at a time.
inventory
package test

type addItemBulk struct {
	Items       []addItemBulk_sub1 ``
	TenantToken string             ``
	UserToken   string             ``
}

type addItemBulk_sub1 struct {
	Code         string ``
	LocationCode string ``
	Quantity     int64  ``
	Reason       string ``
	Sku          string ``
	WarehouseID  int64  ``
}

package test

type addItemBulk struct {
	Errors  []addItemBulk_sub1 ``
	Results []string           ``
	Status  string             ``
}

type addItemBulk_sub1 struct {
	ErrorMessages []string ``
	Sku           string   ``
}

AddShipments
Heavy
Using this call, users can add shipments to a sale.
sales
package test

type addShipments struct {
	Shipments   []addShipments_sub8 ``
	TenantToken string              ``
	UserToken   string              ``
}

type addShipments_sub7 struct {
	Address     addShipments_sub6 ``
	ThreePL     bool              ``
	WarehouseID string            ``
}

type addShipments_sub6 struct {
	Address1   string ``
	Address2   string ``
	City       string ``
	Company    string ``
	Country    string ``
	Email      string ``
	FirstName  string ``
	LastName   string ``
	MiddleName string ``
	PostalCode string ``
	Region     string ``
}

type addShipments_sub8 struct {
	AlternateID           string              ``
	Carrier               string              ``
	Class                 string              ``
	Costs                 []addShipments_sub1 ``
	EstimatedDeliveryDate string              ``
	EstimatedShipDate     string              ``
	LandedCosts           []addShipments_sub2 ``
	ManifestID            string              ``
	Note                  string              ``
	Parcels               []addShipments_sub5 ``
	SaleID                string              ``
	ShippedFrom           addShipments_sub7   ``
	Source                string              ``
	Status                string              ``
	TotalWeight           int64               ``
	TrackingNumber        string              ``
	TrackingURL           string              ``
	Type                  string              ``
	WeightUnit            string              ``
}

type addShipments_sub1 struct {
	Amount          int64  ``
	CostType        string ``
	CurrencyIsoCode string ``
}

type addShipments_sub2 struct {
	Amount          int64  ``
	CurrencyIsoCode string ``
	Sku             string ``
}

type addShipments_sub5 struct {
	Dimensions addShipments_sub3   ``
	Items      []addShipments_sub4 ``
	Note       string              ``
	Number     int64               ``
	Weight     int64               ``
	WeightUnit string              ``
}

type addShipments_sub3 struct {
	Height int64  ``
	Length int64  ``
	Unit   string ``
	Width  int64  ``
}

type addShipments_sub4 struct {
	Quantity int64  ``
	Sku      string ``
}

package test

type addShipments struct {
	Errors []interface{} ``
	Status string        ``
}

CreateBrands
Moderate
products
package test

type createBrands struct {
	Brands      []createBrands_sub1 ``
	TenantToken string              ``
	UserToken   string              ``
}

type createBrands_sub1 struct {
	Name string ``
}

package test

type createBrands struct {
	Errors []interface{} ``
	Status string        ``
}

CreateHolds
Moderate
sales
package test

type createHolds struct {
	Holds       []createHolds_sub1 ``
	TenantToken string             ``
	UserToken   string             ``
}

type createHolds_sub1 struct {
	Description       string ``
	ExpirationDateUtc string ``
	Quantity          int64  ``
	Sku               string ``
}

package test

type createHolds []struct {
	Quantity int64  ``
	Sku      string ``
}

CreateKit
Moderate
Using this call, users may create a kit inside of SkuVault.
products
package test

type createKit struct {
	AllowCreateAp bool             ``
	Code          string           ``
	KitLines      []createKit_sub1 ``
	Sku           string           ``
	TenantToken   string           ``
	Title         string           ``
	UserToken     string           ``
}

type createKit_sub1 struct {
	Combine  int64    ``
	Items    []string ``
	LineName string   ``
	Quantity int64    ``
}

package test

type createKit struct {
	Errors  []string ``
	Success string   ``
}

CreatePO
Moderate
This call let's you create a PO using our API.
purchaseorders
package test

type createPO struct {
	ArrivalDueDate       string          ``
	LineItems            []createPO_sub1 ``
	OrderCancelDate      string          ``
	OrderDate            string          ``
	PaymentStatus        string          ``
	Payments             []createPO_sub2 ``
	PoNumber             string          ``
	PrivateNotes         string          ``
	PublicNotes          string          ``
	RequestedShipDate    string          ``
	SentStatus           string          ``
	ShipToAddress        string          ``
	ShipToWarehouse      string          ``
	ShippingCarrierClass createPO_sub3   ``
	SupplierName         string          ``
	TenantToken          string          ``
	TermsName            string          ``
	TrackingInfo         string          ``
	UserToken            string          ``
}

type createPO_sub2 struct {
	Amount      int64  ``
	Note        string ``
	PaymentName string ``
}

type createPO_sub3 struct {
	CarrierName string ``
	ClassName   string ``
}

type createPO_sub1 struct {
	Cost          int64  ``
	Identifier    string ``
	PrivateNotes  string ``
	PublicNotes   string ``
	Quantity      int64  ``
	QuantityTo3PL int64  ``
	Sku           string ``
	Variant       string ``
}

package test

type createPO struct {
	CreatePOStatus string ``
}

CreateProduct
Moderate
Create products in SkuVault one at a time. Bulk version available: 
products
package test

type createProduct struct {
	AllowCreateAp            bool                 ``
	Attributes               createProduct_sub1   ``
	Brand                    string               ``
	Classification           string               ``
	Code                     interface{}          ``
	Cost                     int64                ``
	Description              string               ``
	LongDescription          string               ``
	MinimumOrderQuantity     int64                ``
	MinimumOrderQuantityInfo string               ``
	Note                     string               ``
	PartNumber               string               ``
	Pictures                 []string             ``
	ReorderPoint             int64                ``
	RetailPrice              string               ``
	SalePrice                int64                ``
	ShortDescription         string               ``
	Sku                      string               ``
	Statuses                 []string             ``
	SupplierInfo             []createProduct_sub2 ``
	TenantToken              string               ``
	UserToken                string               ``
	VariationParentSku       string               ``
	Weight                   int64                ``
	WeightUnit               string               ``
}

type createProduct_sub1 struct {
	AttributeName string ``
}

type createProduct_sub2 struct {
	Cost               float64 ``
	LeadTime           int64   ``
	SupplierName       string  ``
	SupplierPartNumber string  ``
	IsActive           bool    ``
	IsPrimary          bool    ``
}

package test

type createProduct struct {
	Errors []string ``
	Status string   ``
}

CreateProducts
Heavy
Create 100 products per request.
products
package test

type createProducts struct {
	Items       []createProducts_sub3 ``
	TenantToken string                ``
	UserToken   string                ``
}

type createProducts_sub3 struct {
	AllowCreateAp            bool                  ``
	Attributes               createProducts_sub1   ``
	Brand                    string                ``
	Classification           string                ``
	Code                     string                ``
	Cost                     int64                 ``
	Description              string                ``
	LongDescription          string                ``
	MinimumOrderQuantity     int64                 ``
	MinimumOrderQuantityInfo string                ``
	Note                     string                ``
	PartNumber               string                ``
	Pictures                 []string              ``
	ReorderPoint             int64                 ``
	RetailPrice              int64                 ``
	SalePrice                int64                 ``
	ShortDescription         string                ``
	Sku                      string                ``
	Statuses                 []string              ``
	SupplierInfo             []createProducts_sub2 ``
	VariationParentSku       string                ``
	Weight                   int64                 ``
	WeightUnit               string                ``
}

type createProducts_sub1 struct {
	AttributeName string ``
}

type createProducts_sub2 struct {
	Cost               int64  ``
	LeadTime           int64  ``
	SupplierName       string ``
	SupplierPartNumber string ``
	IsActive           bool   ``
	IsPrimary          bool   ``
}

package test

type createProducts struct {
	Errors []createProducts_sub1 ``
	Status string                ``
}

type createProducts_sub1 struct {
	ErrorMessages []string ``
	Sku           string   ``
}

package test

type createProducts struct {
	Errors []interface{} ``
	Status string        ``
}

CreateSuppliers
Moderate
Returns the list of current Suppliers in a SkuVault account.
products
package test

type createSuppliers struct {
	Suppliers   []createSuppliers_sub1 ``
	TenantToken string                 ``
	UserToken   string                 ``
}

type createSuppliers_sub1 struct {
	EmailTemplateMessage string   ``
	EmailTemplateSubject string   ``
	Emails               []string ``
	Name                 string   ``
}

package test

type createSuppliers struct {
	Errors []string ``
}

GetAvailableQuantities
Heavy
Retrieve a list of SKUs and their total available quantities across all warehouses. Available Quantity is the quantity that is actually available to sell across all your sales channels.
inventory
package test

type getAvailableQuantities struct {
	ExpandAlternateSkus       bool        ``
	ModifiedAfterDateTimeUtc  string      ``
	ModifiedBeforeDateTimeUtc string      ``
	PageNumber                int64       ``
	PageSize                  interface{} ``
	TenantToken               string      ``
	UserToken                 string      ``
}

package test

type getAvailableQuantities struct {
	Items []getAvailableQuantities_sub1 ``
}

type getAvailableQuantities_sub1 struct {
	AvailableQuantity       int64  ``
	IsAlternateSku          bool   ``
	LastModifiedDateTimeUtc string ``
	Sku                     string ``
}

GetBrands
Heavy
Returns a list of Brands created in SkuVault.
products
package test

type getBrands struct {
	PageNumber  int64  ``
	TenantToken string ``
	UserToken   string ``
}

package test

type getBrands struct {
	Brands []getBrands_sub1 ``
}

type getBrands_sub1 struct {
	IsEnabled bool   ``
	Name      string ``
}

GetClassifications
Heavy
Returns classifications and, if they exist, their named attributes.
products
package test

type getClassifications struct {
	PageNumber  int64  ``
	TenantToken string ``
	UserToken   string ``
}

package test

type getClassifications struct {
	Classifications []getClassifications_sub2 ``
}

type getClassifications_sub2 struct {
	Attributes []getClassifications_sub1 ``
	IsEnabled  bool                      ``
	Name       string                    ``
}

type getClassifications_sub1 struct {
	IsEnabled  bool     ``
	IsRequired bool     ``
	Name       string   ``
	Values     []string ``
}

GetExternalWarehouseQuantities
Heavy
This call gets the quantities in a designated External Warehouse. Please note these are different than ordinary warehouses.
inventory
package test

type getExternalWarehouseQuantities struct {
	GetTotalFbaQuantities bool        ``
	PageNumber            int64       ``
	PageSize              interface{} ``
	TenantToken           string      ``
	Usertoken             string      ``
	WarehouseID           string      ``
}

package test

type getExternalWarehouseQuantities struct {
	Errors     []string                              ``
	Quantities []getExternalWarehouseQuantities_sub1 ``
}

type getExternalWarehouseQuantities_sub1 struct {
	InStockQuantity  int64  ``
	InboundQuantity  int64  ``
	ReserveQuantity  int64  ``
	Sku              string ``
	TotalQuantity    int64  ``
	TransferQuantity int64  ``
}

GetExternalWarehouses
Moderate
Returns your external warehouses. No page parameters.
inventory
package test

type getExternalWarehouses struct {
	TenantToken string ``
	UserToken   string ``
}

package test

type getExternalWarehouses struct {
	Warehouses []getExternalWarehouses_sub1 ``
}

type getExternalWarehouses_sub1 struct {
	Code string ``
	ID   string ``
}

GetIncomingItems
Get incoming items for incomplete purchase orders
purchaseorders
package test

type getIncomingItems struct {
	PageNumber  int64  ``
	TenantToken string ``
	UserToken   string ``
}

package test

type getIncomingItems struct {
	Errors    []interface{}           ``
	SoldItems []getIncomingItems_sub1 ``
	Status    string                  ``
}

type getIncomingItems_sub1 struct {
	Date       string ``
	Quantity   int64  ``
	Sku        string ``
	TotalPrice int64  ``
}

GetIntegrations
Severe
Returns a list of your enabled channel accounts. No page parameters.
integration
package test

type getIntegrations struct {
	TenantToken string ``
	UserToken   string ``
}

package test

type getIntegrations struct {
	Accounts []getIntegrations_sub1 ``
}

type getIntegrations_sub1 struct {
	ID     string ``
	LongID string ``
	Name   string ``
	Type   string ``
}

GetInventoryByLocation
Heavy
Returns location and warehouse per product.
inventory
package test

type getInventoryByLocation struct {
	IsReturnByCodes bool          ``
	PageNumber      int64         ``
	PageSize        int64         ``
	ProductCodes    []interface{} ``
	ProductSKUs     []interface{} ``
	TenantToken     string        ``
	Usertoken       string        ``
}

package test

type getInventoryByLocation struct {
	Errors []string                    ``
	Items  getInventoryByLocation_sub2 ``
}

type getInventoryByLocation_sub1 struct {
	LocationCode  string ``
	Quantity      int64  ``
	Reserve       bool   ``
	WarehouseCode string ``
}

type getInventoryByLocation_sub2 struct {
	SKU_as_Key []getInventoryByLocation_sub1 ``
}

GetItemQuantities
Heavy
Returns product quantities.
inventory
package test

type getItemQuantities struct {
	ModifiedAfterDateTimeUtc  string      ``
	ModifiedBeforeDateTimeUtc string      ``
	PageNumber                int64       ``
	PageSize                  interface{} ``
	ProductCodes              []string    ``
	TenantToken               string      ``
	UserToken                 string      ``
}

package test

type getItemQuantities struct {
	Items []getItemQuantities_sub1 ``
}

type getItemQuantities_sub1 struct {
	AvailableQuantity       int64  ``
	Code                    string ``
	HeldQuantity            int64  ``
	LastModifiedDateTimeUtc string ``
	PendingQuantity         int64  ``
	PickedQuantity          int64  ``
	Sku                     string ``
	TotalOnHand             int64  ``
}

GetKitQuantities
Heavy
Returns kit quantities.
inventory
package test

type getKitQuantities struct {
	ModifiedAfterDateTimeUtc  string ``
	ModifiedBeforeDateTimeUtc string ``
	PageNumber                int64  ``
	TenantToken               string ``
	UserToken                 string ``
}

package test

type getKitQuantities struct {
	Kits []getKitQuantities_sub1 ``
}

type getKitQuantities_sub1 struct {
	AvailableQuantity       int64  ``
	LastModifiedDateTimeUtc string ``
	Sku                     string ``
}

GetKits
Heavy
Returns kit details.
products
package test

type getKits struct {
	AvailableQuantityModifiedAfterDateTimeUtc  string   ``
	AvailableQuantityModifiedBeforeDateTimeUtc string   ``
	GetAvailableQuantity                       bool     ``
	IncludeKitCost                             bool     ``
	KitSKUs                                    []string ``
	ModifiedAfterDateTimeUtc                   string   ``
	ModifiedBeforeDateTimeUtc                  string   ``
	PageNumber                                 int64    ``
	TenantToken                                string   ``
	UserToken                                  string   ``
}

package test

type getKits struct {
	Errors []string       ``
	Kits   []getKits_sub3 ``
}

type getKits_sub3 struct {
	AvailableQuantity                        int64          ``
	AvailableQuantityLastModifiedDateTimeUtc string         ``
	Code                                     string         ``
	Cost                                     int64          ``
	Description                              string         ``
	KitLines                                 []getKits_sub2 ``
	LastModifiedDateTimeUtc                  string         ``
	Sku                                      string         ``
}

type getKits_sub1 struct {
	Code        string ``
	Description string ``
	Sku         string ``
}

type getKits_sub2 struct {
	Combine  int64          ``
	Items    []getKits_sub1 ``
	LineName string         ``
	Quantity int64          ``
}

GetOnlineSaleStatus
Heavy
Returns a list of sales and their statuses.
sales
package test

type getOnlineSaleStatus struct {
	OrderIds    []string ``
	TenantToken string   ``
	UserToken   string   ``
}

package test

type getOnlineSaleStatus struct {
	Sales []getOnlineSaleStatus_sub2 ``
}

type getOnlineSaleStatus_sub2 struct {
	ID              string                     ``
	Items           []getOnlineSaleStatus_sub1 ``
	LastPrintedDate string                     ``
	Notes           string                     ``
	PrintedStatus   bool                       ``
	Status          string                     ``
}

type getOnlineSaleStatus_sub1 struct {
	OnlineSaleItemStatus string ``
	Quantity             int64  ``
	Sku                  string ``
}

GetPOs
Heavy
Returns a list of purchase orders.
purchaseorders
package test

type getPOs struct {
	IncludeProducts           bool     ``
	ModifiedAfterDateTimeUtc  string   ``
	ModifiedBeforeDateTimeUtc string   ``
	PONumbers                 []string ``
	PageNumber                int64    ``
	Status                    string   ``
	TenantToken               string   ``
	UserToken                 string   ``
}

package test

type getPOs struct {
	PurchaseOrders []getPOs_sub3 ``
}

type getPOs_sub3 struct {
	ActualShippedDate    string        ``
	ArrivalDueDate       string        ``
	Costs                []interface{} ``
	CreatedDate          string        ``
	LineItems            []getPOs_sub1 ``
	OrderCancelDate      string        ``
	OrderDate            string        ``
	PaymentStatus        string        ``
	PoNumber             string        ``
	PrivateNotes         string        ``
	PublicNotes          string        ``
	RequestedShipDate    string        ``
	ShipToAddress        string        ``
	ShipToWarehouse      string        ``
	ShippingCarrierClass getPOs_sub2   ``
	Status               string        ``
	SupplierName         string        ``
	TermsName            string        ``
	TrackingInfo         string        ``
}

type getPOs_sub2 struct {
	CarrierName string ``
	ClassName   string ``
}

type getPOs_sub1 struct {
	Cost                  int64  ``
	Identifier            string ``
	PrivateNotes          string ``
	ProductID             string ``
	PublicNotes           string ``
	Quantity              int64  ``
	QuantityTo3PL         int64  ``
	ReceivedQuantity      int64  ``
	ReceivedQuantityTo3PL int64  ``
	RetailCost            int64  ``
	Sku                   string ``
	Variant               string ``
}

GetProducts
Heavy
This call returns product(not kit) details. The date parameters include updating details as well as product creation. Details do not include quantity.
products
package test

type getProducts struct {
	ModifiedAfterDateTimeUtc  string   ``
	ModifiedBeforeDateTimeUtc string   ``
	PageNumber                int64    ``
	PageSize                  int64    ``
	ProductCodes              []string ``
	ProductSKUs               []string ``
	TenantToken               string   ``
	UserToken                 string   ``
}

package test

type getProducts struct {
	Errors   []string           ``
	Products []getProducts_sub3 ``
}

type getProducts_sub3 struct {
	Attributes          []getProducts_sub1 ``
	Brand               string             ``
	Classification      string             ``
	Code                string             ``
	Cost                int64              ``
	CreatedDateUtc      string             ``
	Description         string             ``
	DisableQuantitySync bool               ``
	ID                  string             ``
	IncrementalQuantity int64              ``
	IsAlternateSKU      bool               ``
	LongDescription     string             ``
	Moq                 int64              ``
	MOQInfo             string             ``
	ModifiedDateUtc     string             ``
	PartNumber          string             ``
	Pictures            []string           ``
	QuantityAvailable   int64              ``
	QuantityInStock     int64              ``
	QuantityInbound     int64              ``
	QuantityIncoming    int64              ``
	QuantityOnHand      int64              ``
	QuantityOnHold      int64              ``
	QuantityPending     int64              ``
	QuantityPicked      int64              ``
	QuantityTotalFBA    int64              ``
	QuantityTransfer    int64              ``
	ReorderPoint        int64              ``
	RetailPrice         int64              ``
	SalePrice           int64              ``
	ShortDescription    string             ``
	Sku                 string             ``
	Statuses            []string           ``
	Supplier            string             ``
	SupplierInfo        []getProducts_sub2 ``
	VariationParentSku  string             ``
	WeightUnit          string             ``
	WeightValue         string             ``
}

type getProducts_sub2 struct {
	Cost               int64  ``
	IsActive           bool   ``
	IsPrimary          bool   ``
	LeadTime           int64  ``
	SupplierName       string ``
	SupplierPartNumber string ``
}

type getProducts_sub1 struct {
	Name  string ``
	Value string ``
}

GetReceivesHistory
Heavy
Returns a list of purchase order receives and receipts.
purchaseorders
package test

type getReceivesHistory struct {
	PageNumber                int64    ``
	PageSize                  int64    ``
	PoNumberFilter            []string ``
	ReceivedAfterDateTimeUTC  string   ``
	ReceivedBeforeDateTimeUTC string   ``
	TenantToken               string   ``
	UserToken                 string   ``
	WarehouseFilter           []string ``
}

package test

type getReceivesHistory struct {
	Corrections []getReceivesHistory_sub2 ``
	Receives    []getReceivesHistory_sub3 ``
}

type getReceivesHistory_sub2 struct {
	Code                  string                    ``
	CorrectedDate         string                    ``
	NewQuantity           int64                     ``
	NewQuantity3pl        int64                     ``
	OldQuantity           int64                     ``
	OldQuantity3pl        int64                     ``
	PONumber              string                    ``
	PartNumber            string                    ``
	QuantityByReceiptDate []getReceivesHistory_sub1 ``
	ReceivedDate          string                    ``
	Sku                   string                    ``
	Username              string                    ``
}

type getReceivesHistory_sub3 struct {
	Code               string ``
	Location           string ``
	PONumber           string ``
	PartNumber         string ``
	Quantity           int64  ``
	Quantity3pl        int64  ``
	QuantityToLocation int64  ``
	ReceiptDate        string ``
	ReceivedDate       string ``
	Sku                string ``
	Username           string ``
	Warehouse          string ``
}

type getReceivesHistory_sub1 struct {
	NewQuantity int64  ``
	OldQuantity int64  ``
	ReceiptDate string ``
}

GetSales
Heavy
Use this call to retrieve a list of sales from SkuVault. 10,000 sales are returned per page.
sales
package test

type getSales struct {
	OrderIds    []string ``
	Status      string   ``
	TenantToken string   ``
	UserToken   string   ``
}

package test

type getSales struct {
	Sales []getSales_sub7 ``
}

type getSales_sub2 struct {
	A int64  ``
	S string ``
}

type getSales_sub6 struct {
	Address1   string ``
	Address2   string ``
	City       string ``
	Country    string ``
	PostalCode string ``
	Region     string ``
}

type getSales_sub7 struct {
	ChannelID       string          ``
	ContactInfo     getSales_sub1   ``
	FulfilledItems  []interface{}   ``
	FulfilledKits   []interface{}   ``
	ID              string          ``
	LastPrintedDate string          ``
	Marketplace     string          ``
	MarketplaceID   string          ``
	Notes           string          ``
	PrintedStatus   bool            ``
	SaleDate        string          ``
	SaleItems       []getSales_sub3 ``
	SaleKits        []getSales_sub5 ``
	ShippingCarrier string          ``
	ShippingCharge  getSales_sub2   ``
	ShippingClass   string          ``
	ShippingCost    getSales_sub2   ``
	ShippingInfo    getSales_sub6   ``
	Status          string          ``
}

type getSales_sub1 struct {
	Company   string ``
	Email     string ``
	FirstName string ``
	LastName  string ``
	Phone     string ``
}

type getSales_sub5 struct {
	KitItems  getSales_sub4 ``
	Quantity  int64         ``
	Sku       string        ``
	UnitPrice getSales_sub2 ``
}

type getSales_sub3 struct {
	Quantity  int64         ``
	Sku       string        ``
	UnitPrice getSales_sub2 ``
}

type getSales_sub4 struct{}

GetSalesByDate
Heavy
Returns sales based on a date range. 10,000 sales are returned per page.
sales
package test

type getSalesByDate struct {
	DateField   string ``
	FromDate    string ``
	PageNumber  int64  ``
	PageSize    int64  ``
	TenantToken string ``
	ToDate      string ``
	UserToken   string ``
}

package test

type getSalesByDate []struct {
	Channel         string                ``
	ChannelID       string                ``
	Client          string                ``
	ContactInfo     getSalesByDate_sub1   ``
	FulfilledItems  []interface{}         ``
	FulfilledKits   []interface{}         ``
	ID              string                ``
	LastPrintedDate string                ``
	Marketplace     string                ``
	MarketplaceID   string                ``
	MerchantItems   []getSalesByDate_sub3 ``
	MerchantKits    []interface{}         ``
	Notes           string                ``
	PrintedStatus   bool                  ``
	SaleDate        string                ``
	ShippingCarrier string                ``
	ShippingCharge  getSalesByDate_sub2   ``
	ShippingClass   string                ``
	ShippingCost    getSalesByDate_sub2   ``
	ShippingInfo    getSalesByDate_sub4   ``
	Status          string                ``
}

package test

type getSalesByDate struct {
	Errors []interface{}         ``
	Sales  []getSalesByDate_sub5 ``
	Status string                ``
}

type getSalesByDate_sub2 struct {
	A int64  ``
	S string ``
}

type getSalesByDate_sub4 struct {
	Address1   string ``
	Address2   string ``
	City       string ``
	Country    string ``
	PostalCode string ``
	Region     string ``
}

type getSalesByDate_sub5 struct {
	Channel         string                ``
	Client          string                ``
	ContactInfo     getSalesByDate_sub1   ``
	FulfilledItems  []interface{}         ``
	FulfilledKits   []interface{}         ``
	ID              string                ``
	LastPrintedDate string                ``
	Marketplace     string                ``
	MerchantItems   []getSalesByDate_sub3 ``
	MerchantKits    []interface{}         ``
	Notes           string                ``
	PrintedStatus   bool                  ``
	SaleDate        string                ``
	ShippingCarrier string                ``
	ShippingCharge  getSalesByDate_sub2   ``
	ShippingClass   string                ``
	ShippingCost    getSalesByDate_sub2   ``
	ShippingInfo    getSalesByDate_sub4   ``
	Status          string                ``
}

type getSalesByDate_sub1 struct {
	Company   string ``
	Email     string ``
	FirstName string ``
	LastName  string ``
	Phone     string ``
}

type getSalesByDate_sub3 struct {
	PartNumber string              ``
	Quantity   int64               ``
	Sku        string              ``
	UnitPrice  getSalesByDate_sub2 ``
}

GetShipments
Heavy
Using this call, users can get current shipment information.
app.skuvault.com/api
package test

type getShipments struct {
	SaleIds     []string ``
	TenantToken string   ``
	UserToken   string   ``
}

package test

type getShipments struct {
	Errors    []interface{}        ``
	Shipments []getShipments_sub12 ``
	Status    string               ``
}

type getShipments_sub1 struct {
	A int64  ``
	S string ``
}

type getShipments_sub11 struct {
	Address       getShipments_sub10 ``
	ThreePL       bool               ``
	WarehouseCode string             ``
}

type getShipments_sub10 struct {
	Address1   string ``
	Address2   string ``
	City       string ``
	Company    string ``
	Country    string ``
	Email      string ``
	FirstName  string ``
	LastName   string ``
	MiddleName string ``
	PostalCode string ``
	Region     string ``
}

type getShipments_sub12 struct {
	AlternateID           string              ``
	Carrier               string              ``
	Class                 string              ``
	Costs                 []getShipments_sub2 ``
	CreatedDate           string              ``
	EstimatedDeliveryDate string              ``
	EstimatedShipDate     string              ``
	FileIds               []getShipments_sub3 ``
	LandedCosts           []getShipments_sub4 ``
	ManifestID            string              ``
	Note                  string              ``
	Parcels               []getShipments_sub9 ``
	SaleID                string              ``
	ShippedFrom           getShipments_sub11  ``
	Source                string              ``
	Status                string              ``
	TotalWeight           int64               ``
	TrackingNumber        string              ``
	TrackingURL           string              ``
	Type                  string              ``
	WeightUnit            string              ``
}

type getShipments_sub2 struct {
	Cost     getShipments_sub1 ``
	CostType string            ``
}

type getShipments_sub4 struct {
	Cost getShipments_sub1 ``
	Sku  string            ``
}

type getShipments_sub9 struct {
	Dimensions getShipments_sub5   ``
	Items      []getShipments_sub6 ``
	Kits       []getShipments_sub8 ``
	Note       string              ``
	Number     int64               ``
	Weight     int64               ``
	WeightUnit string              ``
}

type getShipments_sub5 struct {
	Height int64  ``
	Length int64  ``
	Unit   string ``
	Width  int64  ``
}

type getShipments_sub8 struct {
	ID       string              ``
	Items    []getShipments_sub7 ``
	Quantity int64               ``
	Sku      string              ``
}

type getShipments_sub6 struct {
	ID       string ``
	Quantity int64  ``
	Sku      string ``
}

type getShipments_sub7 struct {
	ID       string ``
	Quantity int64  ``
}

type getShipments_sub3 struct{}

GetSoldItems
Heavy
Returns a list of sold items filtered by date. 10,000 sales are returned per page.
sales
package test

type getSoldItems struct {
	BreakDownKits bool   ``
	EndDateUtc    string ``
	StartDateUtc  string ``
	TenantToken   string ``
	UserToken     string ``
}

package test

type getSoldItems struct {
	SoldItems []getSoldItems_sub1 ``
}

type getSoldItems_sub1 struct {
	Date       string ``
	Quantity   int64  ``
	Sku        string ``
	TotalPrice int64  ``
}

GetSuppliers
Heavy
Returns the list of current Suppliers in a SkuVault account.
products
package test

type getSuppliers struct {
	PageNumber  int64  ``
	TenantToken string ``
	UserToken   string ``
}

package test

type getSuppliers struct {
	Supplier []getSuppliers_sub1 ``
}

type getSuppliers_sub1 struct {
	IsEnabled bool   ``
	Name      string ``
}

GetTokens
Very Light
Use this call to retrieve your API tokens from SkuVault using your login email and password.
app.skuvault.com/api
package test

type getTokens struct {
	Email    string ``
	Password string ``
}

package test

type getTokens struct {
	TenantToken string ``
	UserToken   string ``
}

GetTransactions
Heavy
Look at your transaction history.
inventory
package test

type getTransactions struct {
	ExcludeTransactionReasons []string ``
	FromDate                  string   ``
	PageNumber                int64    ``
	PageSize                  int64    ``
	TenantToken               string   ``
	ToDate                    string   ``
	TransactionReasons        []string ``
	TransactionType           string   ``
	UserToken                 string   ``
	WarehouseID               string   ``
}

package test

type getTransactions struct {
	Transactions []getTransactions_sub2 ``
}

type getTransactions_sub2 struct {
	Code              string               ``
	Context           getTransactions_sub1 ``
	Location          string               ``
	Quantity          int64                ``
	QuantityAfter     int64                ``
	QuantityBefore    int64                ``
	ScannedCode       string               ``
	Sku               string               ``
	Title             string               ``
	TransactionDate   string               ``
	TransactionNote   string               ``
	TransactionReason string               ``
	TransactionType   string               ``
	User              string               ``
}

type getTransactions_sub1 struct {
	ID   string ``
	Type string ``
}

GetWarehouseItemQuantities
Heavy
This call returns SKUs and quantities from a specified warehouse. 10,000 SKUs returned per page.
inventory
package test

type getWarehouseItemQuantities struct {
	PageNumber  int64  ``
	PageSize    int64  ``
	TenantToken string ``
	UserToken   string ``
	WarehouseID int64  ``
}

package test

type getWarehouseItemQuantities struct {
	ItemQuantities []getWarehouseItemQuantities_sub1 ``
}

type getWarehouseItemQuantities_sub1 struct {
	Quantity int64  ``
	Sku      string ``
}

GetWarehouseItemQuantity
Heavy
Returns the quantity for a specified SKU.
inventory
package test

type getWarehouseItemQuantity struct {
	Sku         string ``
	TenantToken string ``
	UserToken   string ``
	WarehouseID int64  ``
}

package test

type getWarehouseItemQuantity struct {
	Errors              []string ``
	TotalQuantityOnHand int64    ``
}

GetWarehouses
Severe
Returns all your regular warehouses.
inventory
package test

type getWarehouses struct {
	PageNumber  int64  ``
	TenantToken string ``
	UserToken   string ``
}

package test

type getWarehouses struct {
	Warehouses []getWarehouses_sub1 ``
}

type getWarehouses_sub1 struct {
	Code string ``
	ID   string ``
}

PickItem
Moderate
Perform a pick transaction through the API.
inventory
package test

type pickItem struct {
	Code          string ``
	IsExpressPick bool   ``
	LocationCode  string ``
	Note          string ``
	Quantity      int64  ``
	Sku           string ``
	TenantToken   string ``
	UserToken     string ``
	WarehouseID   int64  ``
}

package test

type pickItem struct {
	PickItemStatus string ``
}

ReceivePOItems
Moderate
purchaseorders
package test

type receivePOItems struct {
	LineItems    []receivePOItems_sub1 ``
	PoNumber     string                ``
	ReceiptDate  string                ``
	SupplierName string                ``
	TenantToken  string                ``
	UserToken    string                ``
	WarehouseID  int64                 ``
}

type receivePOItems_sub1 struct {
	Location      string ``
	Quantity      int64  ``
	QuantityTo3PL int64  ``
	Sku           string ``
}

package test

type receivePOItems struct {
	Errors []string ``
	Status string   ``
}

ReleaseHeldQuantities
Moderate
Release holds before their expiration date expires.
sales
package test

type releaseHeldQuantities struct {
	SkusToRelease releaseHeldQuantities_sub1 ``
	TenantToken   string                     ``
	UserToken     string                     ``
}

type releaseHeldQuantities_sub1 struct {
	SKUAsKey int64 ``
}

package test

type releaseHeldQuantities struct {
	ReleasedQuantities releaseHeldQuantities_sub1 ``
}

type releaseHeldQuantities_sub1 struct {
	SKUAsKey int64 ``
}

RemoveItem
Moderate
Remove quantity from a warehouse location. 
inventory
package test

type removeItem struct {
	Code         string ``
	LocationCode string ``
	Quantity     int64  ``
	Reason       string ``
	Sku          string ``
	TenantToken  string ``
	UserToken    string ``
	WarehouseID  int64  ``
}

package test

type removeItem struct {
	RemoveItemStatus string ``
}

RemoveItemBulk
Moderate
Remove quantity from warehouse locations, 100 at a time.
inventory
package test

type removeItemBulk struct {
	Items       []removeItemBulk_sub1 ``
	TenantToken string                ``
	UserToken   string                ``
}

type removeItemBulk_sub1 struct {
	Code         string ``
	LocationCode string ``
	Quantity     int64  ``
	Reason       string ``
	Sku          string ``
	WarehouseID  int64  ``
}

package test

type removeItemBulk struct {
	Errors  []string ``
	Results []string ``
	Status  string   ``
}

SetItemQuantities
Moderate
Sets quantity for multiple products in one request.
inventory
package test

type setItemQuantities struct {
	Items       []setItemQuantities_sub1 ``
	TenantToken string                   ``
	UserToken   string                   ``
}

type setItemQuantities_sub1 struct {
	LocationCode string ``
	Quantity     int64  ``
	Sku          string ``
	WarehouseID  int64  ``
}

package test

type setItemQuantities struct {
	Items       []setItemQuantities_sub1 ``
	TenantToken string                   ``
	UserToken   string                   ``
}

type setItemQuantities_sub1 struct {
	Code         string ``
	LocationCode string ``
	Quantity     int64  ``
	WarehouseID  int64  ``
}

package test

type setItemQuantities struct {
	Errors []setItemQuantities_sub1 ``
	Status string                   ``
}

type setItemQuantities_sub1 struct {
	Code  string ``
	Error string ``
	Sku   string ``
}

SetItemQuantity
Moderate
This lets you explicitly set quantity for an item in a warehouse's location.
inventory
package test

type setItemQuantity struct {
	Code         string ``
	LocationCode string ``
	Quantity     int64  ``
	Sku          string ``
	TenantToken  string ``
	UserToken    string ``
	WarehouseID  int64  ``
}

package test

type setItemQuantity struct {
	SetItemQuantityStatusEnum string ``
}

SetShipmentFile
Severe
Using this call, users can attach a base64 PDF file to Shipment Tracking Number.
app.skuvault.com/api
package test

type setShipmentFile struct {
	Shipments   []setShipmentFile_sub1 ``
	TenantToken string                 ``
	UserToken   string                 ``
}

type setShipmentFile_sub1 struct {
	Carrier        string ``
	FilesData      string ``
	SaleID         string ``
	TrackingNumber string ``
}

package test

type setShipmentFile struct {
	Errors  []interface{}          ``
	FileIds []setShipmentFile_sub1 ``
	Status  string                 ``
}

type setShipmentFile_sub1 struct{}

SyncOnlineSale
Moderate
Sync an online sale to SkuVault. If the sale does not exists, it's created. If it does exist, it's updated.  ShippingStatus is required to create sale, but not update. ItemSkus is always required. Bulk version available: 
sales
package test

type syncOnlineSale struct {
	CheckoutStatus string                ``
	FulfilledItems []syncOnlineSale_sub1 ``
	ItemSkus       []syncOnlineSale_sub1 ``
	MarketplaceID  string                ``
	Notes          string                ``
	OrderDateUtc   string                ``
	OrderID        string                ``
	OrderTotal     int64                 ``
	PaymentStatus  string                ``
	SaleState      string                ``
	ShippingInfo   syncOnlineSale_sub2   ``
	TenantToken    string                ``
	UserToken      string                ``
}

type syncOnlineSale_sub2 struct {
	City            string ``
	CompanyName     string ``
	Country         string ``
	Email           string ``
	FirstName       string ``
	LastName        string ``
	Line1           string ``
	Line2           string ``
	PhoneNumber     string ``
	Postal          string ``
	Region          string ``
	ShippingCarrier string ``
	ShippingClass   string ``
	ShippingStatus  string ``
}

type syncOnlineSale_sub1 struct {
	Quantity  int64  ``
	Sku       string ``
	UnitPrice int64  ``
}

package test

type syncOnlineSale struct {
	OrderID string ``
	Status  string ``
}

SyncOnlineSales
Severe
 Can make this call 2x per minute, 100 sales max
sales
package test

type syncOnlineSales struct {
	Sales       []syncOnlineSales_sub3 ``
	TenantToken string                 ``
	Usertoken   string                 ``
}

type syncOnlineSales_sub3 struct {
	CheckoutStatus string                 ``
	FulfilledItems []syncOnlineSales_sub1 ``
	ItemSkus       []syncOnlineSales_sub1 ``
	MarketplaceID  string                 ``
	Notes          string                 ``
	OrderDateUtc   string                 ``
	OrderID        string                 ``
	OrderTotal     int64                  ``
	PaymentStatus  string                 ``
	SaleState      string                 ``
	ShippingInfo   syncOnlineSales_sub2   ``
}

type syncOnlineSales_sub2 struct {
	City            string ``
	CompanyName     string ``
	Country         string ``
	Email           string ``
	FirstName       string ``
	LastName        string ``
	Line1           string ``
	Line2           string ``
	PhoneNumber     string ``
	Postal          string ``
	Region          string ``
	ShippingCarrier string ``
	ShippingClass   string ``
	ShippingStatus  string ``
}

type syncOnlineSales_sub1 struct {
	Quantity  int64  ``
	Sku       string ``
	UnitPrice int64  ``
}

package test

type syncOnlineSales struct {
	Errors []syncOnlineSales_sub1 ``
	Status string                 ``
}

type syncOnlineSales_sub1 struct {
	ErrorMessages []string ``
	OrderID       string   ``
}

package test

type syncOnlineSales struct {
	Errors []syncOnlineSales_sub1 ``
	Status string                 ``
}

type syncOnlineSales_sub1 struct {
	ErrorMessages []string ``
	OrderID       string   ``
}

SyncShippedSaleAndRemoveItems
Moderate
This method syncs a shipped sale and auto-removes quantity. It will auto-remove quantities based on the first match alphabetically in your warehouses & locations. If a warehouse is provided, then it will use that warehouse.
sales
package test

type syncShippedSaleAndRemoveItems struct {
	FulfilledItems []syncShippedSaleAndRemoveItems_sub1 ``
	ItemSkus       []syncShippedSaleAndRemoveItems_sub1 ``
	Notes          string                               ``
	OrderDateUtc   string                               ``
	OrderID        string                               ``
	OrderTotal     int64                                ``
	ShippingInfo   syncShippedSaleAndRemoveItems_sub2   ``
	TenantToken    string                               ``
	UserToken      string                               ``
	WarehouseID    int64                                ``
}

type syncShippedSaleAndRemoveItems_sub2 struct {
	City            string ``
	CompanyName     string ``
	Country         string ``
	Email           string ``
	FirstName       string ``
	LastName        string ``
	Line1           string ``
	Line2           string ``
	PhoneNumber     string ``
	Postal          string ``
	Region          string ``
	ShippingCarrier string ``
	ShippingClass   string ``
}

type syncShippedSaleAndRemoveItems_sub1 struct {
	Quantity  int64  ``
	Sku       string ``
	UnitPrice int64  ``
}

package test

type syncShippedSaleAndRemoveItems struct {
	RemoveItemErrors []string ``
}

UpdateExternalWarehouseQuantities
Severe
Set the quantity of SKUs in a specified external warehouse. The limit is 100,000 SKUs per call.
inventory
package test

type updateExternalWarehouseQuantities struct {
	Quantities  []updateExternalWarehouseQuantities_sub1 ``
	TenantToken string                                   ``
	UserToken   string                                   ``
	WarehouseID string                                   ``
}

type updateExternalWarehouseQuantities_sub1 struct {
	InStockQuantity  int64  ``
	InboundQuantity  int64  ``
	ReserveQuantity  int64  ``
	Sku              string ``
	TotalQuantity    int64  ``
	TransferQuantity int64  ``
}

package test

type updateExternalWarehouseQuantities struct {
	Errors []string ``
	Status string   ``
}

UpdateHandlingTime
Severe
Update the handling time for each product per Amazon channel account, 500 at a time.
products
package test

type updateHandlingTime struct {
	Items       []updateHandlingTime_sub2 ``
	TenantToken string                    ``
	UserToken   string                    ``
}

type updateHandlingTime_sub1 struct {
	AccountID string ``
	Quantity  int64  ``
}

type updateHandlingTime_sub2 struct {
	HandlingTime []updateHandlingTime_sub1 ``
	Sku          string                    ``
}

package test

type updateHandlingTime struct {
	Errors []interface{} ``
	Status string        ``
}

package test

type updateHandlingTime struct {
	Errors []interface{} ``
	Status string        ``
}

UpdateOnlineSaleStatus
Light
Update the status of a sale.
sales
package test

type updateOnlineSaleStatus struct {
	SaleID      string ``
	Status      string ``
	TenantToken string ``
	UserToken   string ``
}

package test

type updateOnlineSaleStatus struct{}

package test

type updateOnlineSaleStatus struct {
	Errors []interface{} ``
	Status string        ``
}

UpdateProduct
Moderate
Update your product details. Bulk version available: 
products
package test

type updateProduct struct {
	Attributes               updateProduct_sub1   ``
	Brand                    string               ``
	Classification           string               ``
	Code                     string               ``
	Cost                     int64                ``
	Description              string               ``
	LongDescription          string               ``
	MinimumOrderQuantity     int64                ``
	MinimumOrderQuantityInfo string               ``
	Note                     string               ``
	PartNumber               string               ``
	Pictures                 []string             ``
	ReorderPoint             int64                ``
	RetailPrice              int64                ``
	SalePrice                int64                ``
	ShortDescription         string               ``
	Sku                      string               ``
	Statuses                 []string             ``
	SupplierInfo             []updateProduct_sub2 ``
	TenantToken              string               ``
	UserToken                string               ``
	VariationParentSku       string               ``
	Weight                   int64                ``
	WeightUnit               string               ``
}

type updateProduct_sub1 struct {
	AttributeName string ``
}

type updateProduct_sub2 struct {
	Cost               int64  ``
	LeadTime           int64  ``
	SupplierName       string ``
	SupplierPartNumber string ``
	IsActive           bool   ``
	IsPrimary          bool   ``
}

package test

type updateProduct struct {
	Errors []interface{} ``
	Status string        ``
}

UpdateProducts
Heavy
Update products in SkuVault, 100 at a time.
products
package test

type updateProducts struct {
	Items       []updateProducts_sub3 ``
	TenantToken string                ``
	UserToken   string                ``
}

type updateProducts_sub1 struct {
	AttributeName string ``
}

type updateProducts_sub3 struct {
	Attributes               updateProducts_sub1   ``
	Brand                    string                ``
	Classification           string                ``
	Code                     string                ``
	Cost                     int64                 ``
	Description              string                ``
	LongDescription          string                ``
	MinimumOrderQuantity     int64                 ``
	MinimumOrderQuantityInfo string                ``
	Note                     string                ``
	PartNumber               string                ``
	Pictures                 []string              ``
	ReorderPoint             int64                 ``
	RetailPrice              int64                 ``
	SalePrice                int64                 ``
	ShortDescription         string                ``
	Sku                      string                ``
	Statuses                 []string              ``
	SupplierInfo             []updateProducts_sub2 ``
	VariationParentSku       string                ``
	Weight                   int64                 ``
	WeightUnit               string                ``
}

type updateProducts_sub2 struct {
	Cost               int64  ``
	LeadTime           int64  ``
	SupplierName       string ``
	SupplierPartNumber string ``
	IsActive           bool   ``
	IsPrimary          bool   ``
}

package test

type updateProducts struct {
	Errors []string ``
	Status string   ``
}

package test

type updateProducts struct {
	Errors []string ``
	Status string   ``
}

UpdateShipments
Severe
Using this call, users can update shipments to a sale.
sales
package test

type updateShipments struct {
	SaleIds     []string ``
	TenantToken string   ``
	UserToken   string   ``
}

package test

type updateShipments struct {
	Errors []interface{} ``
	Status string        ``
}

